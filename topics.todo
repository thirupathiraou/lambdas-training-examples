
- Why Lambdas ?
    - paradigm shift ,allows functional programming
    - readable and concise code
    - Easy API interfaces and libraries
    - built in parallel processing

- Object Oriented vs functional programming
- Everything is Object and all code blocks associated with classes and objects
- Demo-1/ch_1 : Passing Behavior prior to java 8
- Demo-2/ch_2 : Passing Behavior in java 8 and later
- Demo-3/ch_3 : Type Inference Example
- Demo-4/Ch_4 : Lambdas vs interface implementation
- Demo-5/Ch_5 : Runnable implementations using Lambdas
- Demo-6/Ch_6 : Functional Interface Definition and Java Docs
- Demo-7/Ch_7 : Lambdas Exercise (Home Work :) )

- Functional programming constructs
    - Predicate
    - BiPredicate
    - Supplier
    - Consumer
    - BiConsumer
    - Function
    - BiFunction
    - UnaryOperator
    - BinaryOperator

 - Why Method References ? what are different types
 - More discussion at https://stackoverflow.com/questions/24487805/lambda-expression-vs-method-reference
 - Demo-9/Ch_9 : Constructor Reference Demo
